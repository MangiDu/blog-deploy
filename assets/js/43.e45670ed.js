(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{578:function(t,_,e){"use strict";e.r(_);var v=e(6),n=Object(v.a)({},(function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("我是个不擅长学习的人，看算法不知道放弃了多少次，就像背单词永远只会背 abondon 一样。")]),t._v(" "),e("p",[t._v("然而对于程序员这份职业来说，学习一定是不可逃避必需直面的问题，尤其有时候确实很需要适应变化、快速学习。")]),t._v(" "),e("p",[t._v("学习又分两个方向：广和深。")]),t._v(" "),e("p",[t._v("关于知识广度，以前面试链家时教主说过对于初级人员来说总是 “手里拿着榔头，看什么都像钉子”。在初始学会一项技能时不可避免有这种 “显摆” 的想法，不管场景合适不合适都会想用这个工具尝试尝试。如果看到的钉子实际上是个螺丝呢？用改锥才是更合适的选择，但如果我不知道有改锥这个工具呢，表现大概就会很糟糕。所以应该使自己的工具库尽量丰富，但使用时则要尽可能客观和朴实。可是这个 “广”，也不是说什么都知道一嘴就够了的。个人理解应当是自身知识累积成体系，可以推此及彼，归根结底是一种归纳和迁移的能力。")]),t._v(" "),e("p",[t._v("关于知识深度，专业性这个词大概是个浅层的表面的解释，平时做业务开发并不是需要多深厚的基础能力和底层能力，不如说拼的是熟悉程度和相似场景下踩坑的多少，需要的是快速反应和精准解决问题。这种专业性用在业务逻辑开发上可能刚刚好，如果是需要结合对业务的更深理解可能就不够了，这也是谈到职业发展问题 leader 们经常聊到的点，“怎么样才能用技术去反哺业务？”，只洞悉业务动向在技术实现上可能会没有想象力和执行力，只一心深入技术又可能在业务上无所适从。当然，职业以外脱离业务以纯粹兴趣不断深入的大佬，我就只能献上一双膝盖了。")]),t._v(" "),e("p",[t._v("关于知识领域的划分，参考这篇："),e("a",{attrs:{href:"https://www.infoq.cn/article/7UKFByfF3CyuemdIVlSq",target:"_blank",rel:"noopener noreferrer"}},[t._v("月影：我对前端技术更新的看法以及未来发展趋势预测"),e("OutboundLink")],1),t._v(" 可以划分为三块：")]),t._v(" "),e("ul",[e("li",[t._v("基础知识")]),t._v(" "),e("li",[t._v("通用领域知识")]),t._v(" "),e("li",[t._v("专用领域知识")])]),t._v(" "),e("blockquote",[e("p",[t._v("学习这些知识，也是有不同的方法的。一般来说，如果是基础知识，随便什么时候都可以学，而且越早学习越好。基础知识就像是你的内功，学好它们，融会贯通之后，学习其他的知识都是事半功倍的。如果是通用的领域知识，一旦你下决心从事这个领域，也是能够尽早学习它比较好，不过由于这些知识是领域相关的，如果能一边学习，一边通过实践来打磨，就会掌握得更快。专用领域知识，不一定要很早去学，有一个技巧是，当你用到的时候再去学习它们。如果你没有用到，你可以知道有这门技术，能做什么就行了，不用花大量时间和精力去钻研它们。")])]),t._v(" "),e("p",[t._v("这三块知识面的变动频繁程度是依次增加的：基础知识最稳定，通用领域知识会慢慢的发展更新迭代，专用领域知识（库或者奇技淫巧一类）变化是最频繁的。")]),t._v(" "),e("p",[t._v("结合上文的广度和深度只在纯粹的知识和技能上做比较和关联：对基础知识和通用领域知识的认知决定了知识深度，对通用领域知识和专用领域的认知决定知识广度。")]),t._v(" "),e("p",[t._v("总结：目前来看，先往深了学，然后再考虑宽的事。但也要认识到学习是件漫长艰苦的事，不能一蹴而就也不能同时多点开花，这是平均水平的个人素质和时间精力决定的。")])])}),[],!1,null,null,null);_.default=n.exports}}]);