(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{597:function(t,a,r){"use strict";r.r(a);var s=r(6),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"前置说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前置说明"}},[t._v("#")]),t._v(" 前置说明")]),t._v(" "),r("h3",{attrs:{id:"能解决什么样的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#能解决什么样的问题"}},[t._v("#")]),t._v(" 能解决什么样的问题")]),t._v(" "),r("ul",[r("li",[t._v("字符串匹配的 KMP 算法")]),t._v(" "),r("li",[t._v("双指针法")])]),t._v(" "),r("h2",{attrs:{id:"数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),r("h3",{attrs:{id:"数组与列表的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组与列表的区别"}},[t._v("#")]),t._v(" 数组与列表的区别")]),t._v(" "),r("ul",[r("li",[t._v("是否有 "),r("code",[t._v("索引")])]),t._v(" "),r("li",[t._v("数组在内存中是连续存储的，列表则不一定（例如列表的一种实现方式：链表）")])]),t._v(" "),r("h3",{attrs:{id:"时间复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),r("ul",[r("li",[t._v("读取元素：O (1)")]),t._v(" "),r("li",[t._v("查找元素、插入元素、删除元素：O (n)")])]),t._v(" "),r("h3",{attrs:{id:"题后思考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#题后思考"}},[t._v("#")]),t._v(" 题后思考")]),t._v(" "),r("p",[t._v("用到数组的题目类型非常多，考虑以数组作为容器对于使用的方法的适配度")]),t._v(" "),r("h2",{attrs:{id:"字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),r("h3",{attrs:{id:"kmp算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kmp算法"}},[t._v("#")]),t._v(" KMP 算法")]),t._v(" "),r("p",[r("code",[t._v("Knuth–Morris–Pratt")]),t._v(" （KMP）算法是一种改进的字符串匹配算法，它的核心是利用匹配失败后的信息，尽量减少模式串与主串的匹配次数以达到快速匹配的目的。它的时间复杂度是 O (m + n)。")]),t._v(" "),r("p",[t._v("判断模式串是否是主串的子串，按照一般的想法，会从主串首个字符开始对模式串的所有字符进行循环匹配，渐进时间复杂度为 O (mn)。很多时间浪费在了重复判断上。")]),t._v(" "),r("p",[t._v("如果每次不匹配的时候，我们能立刻知道是哪个元素不匹配，下一步可以从哪里开始重新匹配，就可以简化匹配的过程，也是 KMP 算法的核心思想。")]),t._v(" "),r("h2",{attrs:{id:"双指针法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#双指针法"}},[t._v("#")]),t._v(" 双指针法")]),t._v(" "),r("p",[t._v("典型场景：")]),t._v(" "),r("ul",[r("li",[t._v("从头尾两端开始向中间迭代数组")]),t._v(" "),r("li",[t._v("快慢指针")])])])}),[],!1,null,null,null);a.default=v.exports}}]);